package tls12

import "github.com/elmasy-com/bytebuilder"

func marshalExtensions(ServerName string) []byte {

	// Add extensions by hand (very ugly, i know) to create a solid default.

	buf := bytebuilder.NewEmpty()

	// supported_groups
	buf.WriteBytes(0x00, 0x0A, 0x00, 0x0C, 0x00, 0x0A, 0x00, 0x1D, 0x00, 0x17, 0x00, 0x1e, 0x00, 0x19, 0x00, 0x18)

	// ec_point_formats
	buf.WriteBytes(0x00, 0x0B, 0x00, 0x04, 0x03, 0x00, 0x01, 0x02)

	// signature_algorithms
	buf.WriteBytes(0x00, 0x0D, 0x00, 0x2A, 0x00, 0x28, 0x04, 0x03, 0x05, 0x03, 0x06, 0x03, 0x08, 0x07, 0x08, 0x08, 0x08, 0x09, 0x08, 0x0A, 0x08, 0x0B,
		0x08, 0x04, 0x08, 0x05, 0x08, 0x06, 0x04, 0x01, 0x05, 0x01, 0x06, 0x01, 0x03, 0x03, 0x03, 0x01, 0x03, 0x02, 0x04, 0x02, 0x05, 0x02, 0x06, 0x02)

	// extended_master_secret
	buf.WriteBytes(0x00, 0x17, 0x00, 0x00)

	if ServerName != "" {
		buf.WriteBytes(marshalExtensionSNI(ServerName)...)
	}

	return buf.Bytes()
}

func marshalExtensionSNI(ServerName string) []byte {

	buf := bytebuilder.NewEmpty()

	buf.WriteBytes(0x00, 0x00) // type
	buf.WriteUint16(uint16(5 + len(ServerName)))
	buf.WriteUint16(uint16(3 + len(ServerName)))
	buf.WriteBytes(0x00)
	buf.WriteUint16(uint16(len(ServerName)))
	buf.WriteBytes([]byte(ServerName)...)

	return buf.Bytes()
}
